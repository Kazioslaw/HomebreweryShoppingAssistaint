// <auto-generated />
using System;
using HomebreweryShoppingAssistaint.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomebreweryShoppingAssistaint.Migrations
{
    [DbContext(typeof(HomebreweryShoppingAssistaintContext))]
    [Migration("20250104194037_AddingFermentorModel")]
    partial class AddingFermentorModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<int>("CategoryName")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 3,
                            CategoryName = 3
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = 2
                        },
                        new
                        {
                            CategoryID = 1,
                            CategoryName = 1
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = 4
                        });
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryID"));

                    b.Property<int>("DeliveryName")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeliveryWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("DeliveryID");

                    b.HasIndex("ShopID");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            DeliveryID = 1,
                            DeliveryName = 5,
                            DeliveryPrice = 15.99m,
                            DeliveryWeight = 0.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 2,
                            DeliveryName = 5,
                            DeliveryPrice = 18.55m,
                            DeliveryWeight = 4.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 3,
                            DeliveryName = 5,
                            DeliveryPrice = 22.03m,
                            DeliveryWeight = 29.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 4,
                            DeliveryName = 5,
                            DeliveryPrice = 44.08m,
                            DeliveryWeight = 59.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 5,
                            DeliveryName = 5,
                            DeliveryPrice = 66.12m,
                            DeliveryWeight = 89.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 6,
                            DeliveryName = 5,
                            DeliveryPrice = 88.16m,
                            DeliveryWeight = 119.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 7,
                            DeliveryName = 5,
                            DeliveryPrice = 110.20m,
                            DeliveryWeight = 149.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 8,
                            DeliveryName = 5,
                            DeliveryPrice = 132.24m,
                            DeliveryWeight = 179.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 9,
                            DeliveryName = 5,
                            DeliveryPrice = 154.28m,
                            DeliveryWeight = 209.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 10,
                            DeliveryName = 5,
                            DeliveryPrice = 176.32m,
                            DeliveryWeight = 239.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 11,
                            DeliveryName = 6,
                            DeliveryPrice = 23.19m,
                            DeliveryWeight = 4.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 12,
                            DeliveryName = 6,
                            DeliveryPrice = 27.83m,
                            DeliveryWeight = 29.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 13,
                            DeliveryName = 6,
                            DeliveryPrice = 49.88m,
                            DeliveryWeight = 59.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 14,
                            DeliveryName = 6,
                            DeliveryPrice = 71.92m,
                            DeliveryWeight = 89.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 15,
                            DeliveryName = 6,
                            DeliveryPrice = 93.96m,
                            DeliveryWeight = 119.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 16,
                            DeliveryName = 6,
                            DeliveryPrice = 116.00m,
                            DeliveryWeight = 149.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 17,
                            DeliveryName = 6,
                            DeliveryPrice = 138.04m,
                            DeliveryWeight = 179.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 18,
                            DeliveryName = 6,
                            DeliveryPrice = 160.08m,
                            DeliveryWeight = 209.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 19,
                            DeliveryName = 6,
                            DeliveryPrice = 182.12m,
                            DeliveryWeight = 239.99m,
                            ShopID = 3
                        },
                        new
                        {
                            DeliveryID = 20,
                            DeliveryName = 3,
                            DeliveryPrice = 22.90m,
                            DeliveryWeight = 15m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 21,
                            DeliveryName = 3,
                            DeliveryPrice = 24.90m,
                            DeliveryWeight = 30m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 22,
                            DeliveryName = 3,
                            DeliveryPrice = 49.80m,
                            DeliveryWeight = 60m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 23,
                            DeliveryName = 3,
                            DeliveryPrice = 68.70m,
                            DeliveryWeight = 90m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 24,
                            DeliveryName = 3,
                            DeliveryPrice = 91.20m,
                            DeliveryWeight = 120m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 25,
                            DeliveryName = 3,
                            DeliveryPrice = 114.50m,
                            DeliveryWeight = 150m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 26,
                            DeliveryName = 3,
                            DeliveryPrice = 137.40m,
                            DeliveryWeight = 180m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 27,
                            DeliveryName = 1,
                            DeliveryPrice = 24.90m,
                            DeliveryWeight = 20m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 28,
                            DeliveryName = 2,
                            DeliveryPrice = 14.95m,
                            DeliveryWeight = 13m,
                            ShopID = 4
                        },
                        new
                        {
                            DeliveryID = 29,
                            DeliveryName = 1,
                            DeliveryPrice = 17.50m,
                            DeliveryWeight = 25m,
                            ShopID = 5
                        },
                        new
                        {
                            DeliveryID = 30,
                            DeliveryName = 3,
                            DeliveryPrice = 23.90m,
                            DeliveryWeight = 30m,
                            ShopID = 5
                        },
                        new
                        {
                            DeliveryID = 31,
                            DeliveryName = 4,
                            DeliveryPrice = 29.90m,
                            DeliveryWeight = 30m,
                            ShopID = 5
                        },
                        new
                        {
                            DeliveryID = 32,
                            DeliveryName = 5,
                            DeliveryPrice = 25.90m,
                            DeliveryWeight = 30m,
                            ShopID = 5
                        });
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Fermenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fermenters");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Product30DaysPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductCheckHistoryID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductHarvestYear")
                        .HasColumnType("int");

                    b.Property<string>("ProductLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProductCheckHistoryID");

                    b.HasIndex("ShopID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ProductCheckHistory", b =>
                {
                    b.Property<int>("ProductCheckHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCheckHistoryID"));

                    b.Property<DateTime>("CheckDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ProductCheckHistoryID");

                    b.ToTable("ProductCheckHistories");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopID"));

                    b.Property<string>("ShopLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopName")
                        .HasColumnType("int");

                    b.HasKey("ShopID");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            ShopID = 1,
                            ShopLink = "https://alepiwo.pl",
                            ShopName = 1
                        },
                        new
                        {
                            ShopID = 2,
                            ShopLink = "https://browamator.pl",
                            ShopName = 2
                        },
                        new
                        {
                            ShopID = 3,
                            ShopLink = "https://www.browar.biz/centrumpiwowarstwa",
                            ShopName = 3
                        },
                        new
                        {
                            ShopID = 4,
                            ShopLink = "https://homebrewing.pl/",
                            ShopName = 4
                        },
                        new
                        {
                            ShopID = 5,
                            ShopLink = "https://twojbrowar.pl/pl/",
                            ShopName = 5
                        });
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ShopCheckHistory", b =>
                {
                    b.Property<int>("ShopCheckHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopCheckHistoryID"));

                    b.Property<DateTime>("CheckDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ShopCheckHistoryID");

                    b.HasIndex("ShopID");

                    b.ToTable("ShopCheckHistories");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Delivery", b =>
                {
                    b.HasOne("HomebreweryShoppingAssistaint.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Product", b =>
                {
                    b.HasOne("HomebreweryShoppingAssistaint.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomebreweryShoppingAssistaint.Models.ProductCheckHistory", null)
                        .WithMany("Product")
                        .HasForeignKey("ProductCheckHistoryID");

                    b.HasOne("HomebreweryShoppingAssistaint.Models.Shop", "Shop")
                        .WithMany("Product")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ShopCheckHistory", b =>
                {
                    b.HasOne("HomebreweryShoppingAssistaint.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ProductCheckHistory", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Shop", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
