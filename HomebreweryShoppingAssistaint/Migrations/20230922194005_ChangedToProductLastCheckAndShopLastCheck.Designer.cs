// <auto-generated />
using System;
using HomebreweryShoppingAssistaint.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomebreweryShoppingAssistaint.Migrations
{
    [DbContext(typeof(HomebreweryShoppingAssistaintContext))]
    [Migration("20230922194005_ChangedToProductLastCheckAndShopLastCheck")]
    partial class ChangedToProductLastCheckAndShopLastCheck
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("CategoryName")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Product30DaysPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductLastCheckID")
                        .HasColumnType("int");

                    b.Property<string>("ProductLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProductLastCheckID");

                    b.HasIndex("ShopID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ProductLastCheck", b =>
                {
                    b.Property<int>("ProductLastCheckID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductLastCheckID"));

                    b.Property<DateTime>("LastCheckDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductLastCheckID");

                    b.ToTable("ProductLastCheck");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopID"));

                    b.Property<int?>("ProductLastCheckID")
                        .HasColumnType("int");

                    b.Property<string>("ShopLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopName")
                        .HasColumnType("int");

                    b.HasKey("ShopID");

                    b.HasIndex("ProductLastCheckID");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ShopLastCheck", b =>
                {
                    b.Property<int>("ShopLastCheckID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopLastCheckID"));

                    b.Property<DateTime>("LastCheckDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.HasKey("ShopLastCheckID");

                    b.ToTable("ShopLastCheck");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Product", b =>
                {
                    b.HasOne("HomebreweryShoppingAssistaint.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomebreweryShoppingAssistaint.Models.ProductLastCheck", null)
                        .WithMany("Product")
                        .HasForeignKey("ProductLastCheckID");

                    b.HasOne("HomebreweryShoppingAssistaint.Models.Shop", "Shop")
                        .WithMany("Product")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Shop", b =>
                {
                    b.HasOne("HomebreweryShoppingAssistaint.Models.ProductLastCheck", null)
                        .WithMany("Shop")
                        .HasForeignKey("ProductLastCheckID");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.ProductLastCheck", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("HomebreweryShoppingAssistaint.Models.Shop", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
